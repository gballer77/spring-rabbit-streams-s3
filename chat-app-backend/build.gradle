plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'software.baller'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2022.0.4")
	set('springShellVersion', "3.1.3")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.shell:spring-shell-starter'
	implementation 'org.springframework.amqp:spring-rabbit-stream'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation project(':chat-lib')
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.shell:spring-shell-dependencies:${springShellVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('installFrontend', Exec) {
	inputs.file(file("frontend/yarn.lock"))
	inputs.file(file("frontend/package.json"))
	outputs.dir(file("frontend/node_modules"))
	commandLine("yarn", "--cwd", "frontend", "install")
}

tasks.register('buildFrontend', Exec) {
	dependsOn("installFrontend")
	inputs.dir(file("frontend"))
	outputs.dir(file("frontend/dist"))
	commandLine("yarn", "--cwd", "frontend", "build")
}

tasks.register('copyFrontend', Sync) {
	dependsOn("buildFrontend")
	from(file("./frontend/dist"))
	into(file("$buildDir/resources/main/static"))
	doLast {
		println("copied built frontend to static resources")
	}
}
